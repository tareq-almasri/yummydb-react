{"ast":null,"code":"var _jsxFileName = \"/home/dci/lord-of-scripts/yummy-db/react/src/components/Search.js\";\nimport React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Search.css\";\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from \"reactstrap\";\nimport { ApiContext } from \"./ApiContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst Search = props => {\n  const [recipies, setRecipies] = useState([]);\n  const [query, setQuery] = useContext(ApiContext);\n  const [cuisine, setCuisine] = useState(\"\");\n  const [diet, setDiet] = useState(\"\");\n  const [intolerance, setIntolerance] = useState(\"\");\n  const [type, setType] = useState(props.location.state ? props.location.state.type : \"\");\n  const [recipeNumber, setRecipeNumber] = useState(12);\n  useEffect(() => {\n    fetch(`https://api.spoonacular.com/recipes/search?cuisine=${cuisine}&diet=${diet}&intolerances=${intolerance}&number=${recipeNumber}&type=${type}&offset=0&query=${query}&apiKey=${process.env.REACT_APP_API_IN_USE}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => setRecipies(res.results)).catch(err => {\n      console.log(err);\n    });\n  }, [cuisine, diet, intolerance, type, query, recipeNumber]);\n  const cuisineArray = [\"African\", \"Chinese\", \"Japanese\", \"Korean\", \"Vietnamese\", \"Thai\", \"Indian\", \"British\", \"Irish\", \"French\", \"Italian\", \"Mexican\", \"Spanish\", \"Middle Eastern\", \"Jewish\", \"American\", \"Cajun\", \"Southern\", \"Greek\", \"German\", \"Nordic\", \"Eastern European\", \"Caribbean\", \"Latin American\"];\n  const dietArray = [\"Pescetarian\", \"Lacto Vegetarian\", \"Ovo Vegetarian\", \"Vegan\", \"Paleo\", \"Primal\", \"Vegetarian\"];\n  const intoleranceArray = [\"Dairy\", \"Egg\", \"Gluten\", \"Peanut\", \"Sesame\", \"Seafood\", \"Shellfish\", \"Soy\", \"Sulfite\", \"Tree Nut\", \"Wheat\"];\n  const typeArray = [\"Main Course\", \"Side Dish\", \"Dessert\", \"Appetizer\", \"Salad\", \"Bread\", \"Breakfast\", \"Soup\", \"Beverage\", \"Sauce\", \"Drink\"];\n  const [dropdownOpen, setOpen] = useState({\n    cuisine: false,\n    diet: false,\n    intolerance: false,\n    type: false\n  });\n  const [selection, setSelection] = useState({\n    cuisine: \"Any\",\n    diet: \"Any\",\n    intolerance: \"Any\",\n    type: props.location.state ? props.location.state.type : \"Any\"\n  });\n\n  const toggle = item => {\n    const newState = { ...dropdownOpen\n    };\n    newState[item] = !newState[item];\n    setOpen(newState);\n  };\n\n  const changeSelection = (item, e) => {\n    const newState = { ...selection\n    };\n    newState[item] = e.target.innerText;\n    setSelection(newState);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    id: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, query === \"\" ? \"\" : query.replace(/^\\w/, c => c.toUpperCase())), React.createElement(\"div\", {\n    className: \"drop-down-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      margin: \"20px\",\n      textAlign: \"center\"\n    },\n    className: \"cuisine-dropdown filterHover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cuisineTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Cuisine \"), React.createElement(ButtonDropdown, {\n    size: \"md\",\n    isOpen: dropdownOpen.cuisine,\n    toggle: () => toggle(\"cuisine\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    className: \"drop-down-toggle\",\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, selection.cuisine), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, cuisineArray.map(oneCuisine => React.createElement(DropdownItem, {\n    className: \"drop-down-item\",\n    key: oneCuisine,\n    onClick: e => {\n      changeSelection(\"cuisine\", e);\n      setCuisine(oneCuisine);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, oneCuisine))))), React.createElement(\"div\", {\n    style: {\n      margin: \"20px\",\n      textAlign: \"center\"\n    },\n    className: \"diet-dropdown filterHover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cuisineTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Diet \"), React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen.diet,\n    toggle: () => toggle(\"diet\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    className: \"drop-down-toggle\",\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, selection.diet), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, dietArray.map(oneDiet => React.createElement(DropdownItem, {\n    className: \"drop-down-item\",\n    key: oneDiet,\n    onClick: e => {\n      changeSelection(\"diet\", e);\n      setDiet(oneDiet);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, oneDiet))))), React.createElement(\"div\", {\n    style: {\n      margin: \"20px\",\n      textAlign: \"center\"\n    },\n    className: \"intolerance-dropdown filterHover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cuisineTitle \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Intolerance \"), React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen.intolerance,\n    toggle: () => toggle(\"intolerance\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    className: \"drop-down-toggle\",\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, selection.intolerance), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, intoleranceArray.map(oneIntol => React.createElement(DropdownItem, {\n    className: \"drop-down-item\",\n    key: oneIntol,\n    onClick: e => {\n      changeSelection(\"intolerance\", e);\n      setIntolerance(oneIntol);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, oneIntol))))), React.createElement(\"div\", {\n    style: {\n      margin: \"20px\",\n      textAlign: \"center\"\n    },\n    className: \"type-dropdown filterHover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cuisineTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Type\"), React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen.type,\n    toggle: () => toggle(\"type\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    className: \"drop-down-toggle\",\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, selection.type), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, typeArray.map(oneType => React.createElement(DropdownItem, {\n    className: \"drop-down-item\",\n    key: oneType,\n    onClick: e => {\n      changeSelection(\"type\", e);\n      setType(oneType);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, oneType)))))), React.createElement(\"div\", {\n    className: \"recipies-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, console.log(recipies), recipies.map(res => React.createElement(Link, {\n    key: res.id,\n    className: \"card-image\",\n    to: `recipe/${res.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: `https://spoonacular.com/recipeImages/${res.image}`,\n    alt: res.title,\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    id: \"recipe-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, res.title.replace(/^\\w/, c => c.toUpperCase())), React.createElement(\"div\", {\n    id: \"time-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"far fa-clock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    id: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, res.readyInMinutes > 60 ? Math.floor(res.readyInMinutes / 60) + \"h\" : res.readyInMinutes + \"min\"))))), React.createElement(\"div\", {\n    id: \"more-button-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(Button, {\n    id: \"more-button\",\n    onClick: () => setRecipeNumber(recipeNumber + 12),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \"More\"))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/dci/lord-of-scripts/yummy-db/react/src/components/Search.js"],"names":["React","useState","useEffect","useContext","Fragment","Link","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","ApiContext","Header","Footer","Search","props","recipies","setRecipies","query","setQuery","cuisine","setCuisine","diet","setDiet","intolerance","setIntolerance","type","setType","location","state","recipeNumber","setRecipeNumber","fetch","process","env","REACT_APP_API_IN_USE","method","headers","then","res","json","results","catch","err","console","log","cuisineArray","dietArray","intoleranceArray","typeArray","dropdownOpen","setOpen","selection","setSelection","toggle","item","newState","changeSelection","e","target","innerText","textAlign","display","flexDirection","alignItems","replace","c","toUpperCase","margin","map","oneCuisine","oneDiet","oneIntol","oneType","id","image","title","readyInMinutes","Math","floor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Search.css\";\n\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n} from \"reactstrap\";\nimport { ApiContext } from \"./ApiContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst Search = (props) => {\n  const [recipies, setRecipies] = useState([]);\n  const [query, setQuery] = useContext(ApiContext);\n  const [cuisine, setCuisine] = useState(\"\");\n  const [diet, setDiet] = useState(\"\");\n  const [intolerance, setIntolerance] = useState(\"\");\n  const [type, setType] = useState(\n    props.location.state ? props.location.state.type : \"\"\n  );\n  const [recipeNumber, setRecipeNumber] = useState(12);\n\n\n  useEffect(() => {\n   \n    fetch(\n      `https://api.spoonacular.com/recipes/search?cuisine=${cuisine}&diet=${diet}&intolerances=${intolerance}&number=${recipeNumber}&type=${type}&offset=0&query=${query}&apiKey=${process.env.REACT_APP_API_IN_USE}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => setRecipies(res.results))\n      .catch((err) => {\n        console.log(err);\n      });\n    \n  }, [cuisine, diet, intolerance, type, query, recipeNumber]);\n\n  const cuisineArray = [\n    \"African\",\n    \"Chinese\",\n    \"Japanese\",\n    \"Korean\",\n    \"Vietnamese\",\n    \"Thai\",\n    \"Indian\",\n    \"British\",\n    \"Irish\",\n    \"French\",\n    \"Italian\",\n    \"Mexican\",\n    \"Spanish\",\n    \"Middle Eastern\",\n    \"Jewish\",\n    \"American\",\n    \"Cajun\",\n    \"Southern\",\n    \"Greek\",\n    \"German\",\n    \"Nordic\",\n    \"Eastern European\",\n    \"Caribbean\",\n    \"Latin American\",\n  ];\n\n  const dietArray = [\n    \"Pescetarian\",\n    \"Lacto Vegetarian\",\n    \"Ovo Vegetarian\",\n    \"Vegan\",\n    \"Paleo\",\n    \"Primal\",\n    \"Vegetarian\",\n  ];\n  const intoleranceArray = [\n    \"Dairy\",\n    \"Egg\",\n    \"Gluten\",\n    \"Peanut\",\n    \"Sesame\",\n    \"Seafood\",\n    \"Shellfish\",\n    \"Soy\",\n    \"Sulfite\",\n    \"Tree Nut\",\n    \"Wheat\",\n  ];\n  const typeArray = [\n    \"Main Course\",\n    \"Side Dish\",\n    \"Dessert\",\n    \"Appetizer\",\n    \"Salad\",\n    \"Bread\",\n    \"Breakfast\",\n    \"Soup\",\n    \"Beverage\",\n    \"Sauce\",\n    \"Drink\",\n  ];\n\n  const [dropdownOpen, setOpen] = useState({\n    cuisine: false,\n    diet: false,\n    intolerance: false,\n    type: false,\n  });\n\n  const [selection, setSelection] = useState({\n    cuisine: \"Any\",\n    diet: \"Any\",\n    intolerance: \"Any\",\n    type: props.location.state?props.location.state.type:\"Any\",\n  });\n\n  const toggle = (item) => {\n    const newState = { ...dropdownOpen };\n    newState[item] = !newState[item];\n    setOpen(newState);\n  };\n\n  const changeSelection = (item, e) => {\n    const newState = { ...selection };\n    newState[item] = e.target.innerText;\n    setSelection(newState);\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <div\n        style={{\n          textAlign: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n        id=\"body\"\n      >\n        <h1 style={{ textAlign: \"center\" }}>\n          {query === \"\" ? \"\" : query.replace(/^\\w/, (c) => c.toUpperCase())}\n        </h1>\n\n        <div className=\"drop-down-menu\">\n          <div\n            style={{ margin: \"20px\", textAlign: \"center\" }}\n            className=\"cuisine-dropdown filterHover\"\n          >\n            <div className=\"cuisineTitle\">Cuisine </div>\n            <ButtonDropdown\n              size=\"md\"\n              isOpen={dropdownOpen.cuisine}\n              toggle={() => toggle(\"cuisine\")}\n            >\n              <DropdownToggle className=\"drop-down-toggle\" caret>\n                {selection.cuisine}\n              </DropdownToggle>\n              <DropdownMenu>\n                {cuisineArray.map((oneCuisine) => (\n                  <DropdownItem\n                    className=\"drop-down-item\"\n                    key={oneCuisine}\n                    onClick={(e) => {\n                      changeSelection(\"cuisine\", e);\n                      setCuisine(oneCuisine);\n                    }}\n                  >\n                    {oneCuisine}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          <div\n            style={{ margin: \"20px\", textAlign: \"center\" }}\n            className=\"diet-dropdown filterHover\"\n          >\n            <div className=\"cuisineTitle\">Diet </div>\n            <ButtonDropdown\n              isOpen={dropdownOpen.diet}\n              toggle={() => toggle(\"diet\")}\n            >\n              <DropdownToggle className=\"drop-down-toggle\" caret>\n                {selection.diet}\n              </DropdownToggle>\n              <DropdownMenu>\n                {dietArray.map((oneDiet) => (\n                  <DropdownItem\n                    className=\"drop-down-item\"\n                    key={oneDiet}\n                    onClick={(e) => {\n                      changeSelection(\"diet\", e);\n                      setDiet(oneDiet);\n                    }}\n                  >\n                    {oneDiet}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          <div\n            style={{ margin: \"20px\", textAlign: \"center\" }}\n            className=\"intolerance-dropdown filterHover\"\n          >\n            <div className=\"cuisineTitle \">Intolerance </div>\n            <ButtonDropdown\n              isOpen={dropdownOpen.intolerance}\n              toggle={() => toggle(\"intolerance\")}\n            >\n              <DropdownToggle className=\"drop-down-toggle\" caret>\n                {selection.intolerance}\n              </DropdownToggle>\n              <DropdownMenu>\n                {intoleranceArray.map((oneIntol) => (\n                  <DropdownItem\n                    className=\"drop-down-item\"\n                    key={oneIntol}\n                    onClick={(e) => {\n                      changeSelection(\"intolerance\", e);\n                      setIntolerance(oneIntol);\n                    }}\n                  >\n                    {oneIntol}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          <div\n            style={{ margin: \"20px\", textAlign: \"center\" }}\n            className=\"type-dropdown filterHover\"\n          >\n            <div className=\"cuisineTitle\">Type</div>\n            <ButtonDropdown\n              isOpen={dropdownOpen.type}\n              toggle={() => toggle(\"type\")}\n            >\n              <DropdownToggle className=\"drop-down-toggle\" caret>\n                {selection.type}\n              </DropdownToggle>\n              <DropdownMenu>\n                {typeArray.map((oneType) => (\n                  <DropdownItem\n                    className=\"drop-down-item\"\n                    key={oneType}\n                    onClick={(e) => {\n                      changeSelection(\"type\", e);\n                      setType(oneType);\n                    }}\n                  >\n                    {oneType}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n        </div>\n        <div className=\"recipies-section\">\n          {console.log(recipies)}\n          {recipies.map((res) => (\n            <Link key={res.id} className=\"card-image\" to={`recipe/${res.id}`}>\n              <div id=\"image\">\n                <img\n                  src={`https://spoonacular.com/recipeImages/${res.image}`}\n                  alt={res.title}\n                  width=\"100%\"\n                />\n              </div>\n              <h2 id=\"recipe-title\">\n                {res.title.replace(/^\\w/, (c) => c.toUpperCase())}\n              </h2>\n              <div id=\"time-icon\">\n                <i className=\"far fa-clock\"></i>\n                <span id=\"time\">\n                  {res.readyInMinutes > 60\n                    ? Math.floor(res.readyInMinutes / 60) + \"h\"\n                    : res.readyInMinutes + \"min\"}\n                </span>\n              </div>\n            </Link>\n          ))}\n        </div>\n        <div id=\"more-button-section\">\n          <Button\n            id=\"more-button\"\n            onClick={() => setRecipeNumber(recipeNumber + 12)}\n          >\n            More\n          </Button>\n        </div>\n      </div>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}