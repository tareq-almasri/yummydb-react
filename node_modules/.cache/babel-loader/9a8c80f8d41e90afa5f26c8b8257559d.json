{"ast":null,"code":"var _jsxFileName = \"/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/OneRecipe.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/OneRecipe.css\";\nimport Header from \"./Header\";\nimport { TokenContext } from \"./TokenContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavLink } from \"reactstrap\";\n\nconst OneRecipe = ({\n  match\n}) => {\n  const [recipe, setRecipe] = useState({});\n  const [ingredient, setIngredient] = useState([]);\n  const [ingDetails, setIngDetails] = useState([]);\n  const [isFav, setIsFav] = useState(false);\n  const [token, setToken] = useContext(TokenContext);\n  const [recID, setRecID] = useState();\n  useEffect(() => {\n    fetch(`https://api.spoonacular.com/recipes/${match.params.id}/information?amount=1&apiKey=db603acba1014e209b0cda8a89aae478`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      setRecipe(res);\n      setRecID(res.id);\n      setIngredient(res.extendedIngredients);\n      checkFav(res.id);\n    }).catch(err => {\n      console.log(err);\n    });\n    fetch(`https://api.spoonacular.com/recipes/${match.params.id}/nutritionWidget.json?&apiKey=db603acba1014e209b0cda8a89aae478`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => setIngDetails(res)).catch(err => {\n      console.log(err);\n    });\n  }, [match.params.id, token]);\n\n  const handleAddToFav = () => {\n    if (isFav) {\n      fetch(`http://localhost:5000/remove-fav/${recID}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        method: \"DELETE\"\n      }).then(res => res.json()).then(data => {\n        setIsFav(!isFav);\n        console.log(data);\n      });\n    } else {\n      fetch(\"http://localhost:5000/add-fav\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          recipe: recipe\n        }),\n        method: \"POST\"\n      }).then(res => res.json()).then(data => {\n        setIsFav(!isFav);\n        console.log(data);\n      });\n    }\n  };\n\n  const checkFav = id => {\n    fetch(`http://localhost:5000/check-fav/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => setIsFav(data));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, recipe.title), token ? React.createElement(NavLink, {\n    className: \"star\",\n    title: isFav ? \"remove from favorite\" : \"add to favorite\",\n    onClick: handleAddToFav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faStar,\n    color: isFav ? \"yellow\" : \"gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })) : \"\", React.createElement(\"div\", {\n    className: \"image-ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: recipe.image,\n    alt: recipe.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"nutrition-ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Nutrition\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"nutrition-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"calories: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, ingDetails.calories)), React.createElement(\"li\", {\n    className: \"nutrition-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"carbs: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, ingDetails.carbs)), React.createElement(\"li\", {\n    className: \"nutrition-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"fat: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, ingDetails.fat)), React.createElement(\"li\", {\n    className: \"nutrition-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"protein: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, ingDetails.protein)))), React.createElement(\"div\", {\n    className: \"ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Ingredients\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, ingredient.map(res => React.createElement(\"li\", {\n    key: res.id,\n    className: \"ingredients-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, res.name, \" \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \" \", res.amount, \" \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, res.unit))))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Instructions\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, recipe.instructions)));\n};\n\nexport default OneRecipe;","map":{"version":3,"sources":["/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/OneRecipe.js"],"names":["React","useState","useEffect","useContext","Header","TokenContext","FontAwesomeIcon","faStar","NavLink","OneRecipe","match","recipe","setRecipe","ingredient","setIngredient","ingDetails","setIngDetails","isFav","setIsFav","token","setToken","recID","setRecID","fetch","params","id","method","headers","then","res","json","extendedIngredients","checkFav","catch","err","console","log","handleAddToFav","Authorization","data","body","JSON","stringify","title","image","calories","carbs","fat","protein","map","name","amount","unit","instructions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,yBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACE,YAAD,CAApC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,KAAK,CACF,uCAAsCb,KAAK,CAACc,MAAN,CAAaC,EAAG,+DADpD,EAEH;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFX,KAFG,CAAL,CASGC,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSC,GAAD,IAAS;AACbjB,MAAAA,SAAS,CAACiB,GAAD,CAAT;AACAP,MAAAA,QAAQ,CAACO,GAAG,CAACJ,EAAL,CAAR;AACAX,MAAAA,aAAa,CAACe,GAAG,CAACE,mBAAL,CAAb;AAEAC,MAAAA,QAAQ,CAACH,GAAG,CAACJ,EAAL,CAAR;AACD,KAhBH,EAiBGQ,KAjBH,CAiBUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAnBH;AAoBAX,IAAAA,KAAK,CACF,uCAAsCb,KAAK,CAACc,MAAN,CAAaC,EAAG,gEADpD,EAEH;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFX,KAFG,CAAL,CASGC,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSC,GAAD,IAASb,aAAa,CAACa,GAAD,CAV9B,EAWGI,KAXH,CAWUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAbH;AAcD,GAnCQ,EAmCN,CAACxB,KAAK,CAACc,MAAN,CAAaC,EAAd,EAAkBN,KAAlB,CAnCM,CAAT;;AAqCA,QAAMkB,cAAc,GAAG,MAAM;AAC3B,QAAIpB,KAAJ,EAAW;AACTM,MAAAA,KAAK,CAAE,oCAAmCF,KAAM,EAA3C,EAA8C;AACjDM,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPW,UAAAA,aAAa,EAAG,UAASnB,KAAM;AAFxB,SADwC;AAKjDO,QAAAA,MAAM,EAAE;AALyC,OAA9C,CAAL,CAOGE,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSW,IAAD,IAAU;AACdrB,QAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,OAXH;AAYD,KAbD,MAaO;AACLhB,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCI,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPW,UAAAA,aAAa,EAAG,UAASnB,KAAM;AAFxB,SAD4B;AAKrCqB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE/B,UAAAA,MAAM,EAAEA;AAAV,SAAf,CAL+B;AAMrCe,QAAAA,MAAM,EAAE;AAN6B,OAAlC,CAAL,CAQGE,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CASSW,IAAD,IAAU;AACdrB,QAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,OAZH;AAaD;AACF,GA7BD;;AA+BA,QAAMP,QAAQ,GAAIP,EAAD,IAAQ;AACvBF,IAAAA,KAAK,CAAE,mCAAkCE,EAAG,EAAvC,EAA0C;AAC7CE,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPW,QAAAA,aAAa,EAAG,UAASnB,KAAM;AAFxB;AADoC,KAA1C,CAAL,CAMGS,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSW,IAAD,IAAUrB,QAAQ,CAACqB,IAAD,CAP1B;AAQD,GATD;;AAWA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK5B,MAAM,CAACgC,KAAZ,CAFF,EAGGxB,KAAK,GACJ,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAEF,KAAK,GAAG,sBAAH,GAA4B,iBAF1C;AAGE,IAAA,OAAO,EAAEoB,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE9B,MAAvB;AAA+B,IAAA,KAAK,EAAEU,KAAK,GAAG,QAAH,GAAc,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADI,GASJ,EAZJ,EAeE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEN,MAAM,CAACiC,KAAjB;AAAwB,IAAA,GAAG,EAAEjC,MAAM,CAACgC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO5B,UAAU,CAAC8B,QAAlB,CAFF,CADF,EAKE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO9B,UAAU,CAAC+B,KAAlB,CAFF,CALF,EASE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO/B,UAAU,CAACgC,GAAlB,CAFF,CATF,EAaE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOhC,UAAU,CAACiC,OAAlB,CAFF,CAbF,CAFF,CADF,EAsBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,UAAU,CAACoC,GAAX,CAAgBpB,GAAD,IACd;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACJ,EAAb;AAAiB,IAAA,SAAS,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,GAAG,CAACqB,IAAX,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQrB,GAAG,CAACsB,MAAZ,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOtB,GAAG,CAACuB,IAAX,CAHF,CADD,CADH,CAFF,CAtBF,CAFF,CAfF,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIzC,MAAM,CAAC0C,YAAX,CAFF,CArDF,CADF;AA4DD,CAnJD;;AAoJA,eAAe5C,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/OneRecipe.css\";\nimport Header from \"./Header\";\nimport { TokenContext } from \"./TokenContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavLink } from \"reactstrap\";\n\nconst OneRecipe = ({ match }) => {\n  const [recipe, setRecipe] = useState({});\n  const [ingredient, setIngredient] = useState([]);\n  const [ingDetails, setIngDetails] = useState([]);\n  const [isFav, setIsFav] = useState(false);\n  const [token, setToken] = useContext(TokenContext);\n  const [recID, setRecID] = useState();\n\n  useEffect(() => {\n    fetch(\n      `https://api.spoonacular.com/recipes/${match.params.id}/information?amount=1&apiKey=db603acba1014e209b0cda8a89aae478`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        setRecipe(res);\n        setRecID(res.id);\n        setIngredient(res.extendedIngredients);\n        \n        checkFav(res.id);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    fetch(\n      `https://api.spoonacular.com/recipes/${match.params.id}/nutritionWidget.json?&apiKey=db603acba1014e209b0cda8a89aae478`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => setIngDetails(res))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [match.params.id, token]);\n\n  const handleAddToFav = () => {\n    if (isFav) {\n      fetch(`http://localhost:5000/remove-fav/${recID}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        method: \"DELETE\",\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setIsFav(!isFav);\n          console.log(data);\n        });\n    } else {\n      fetch(\"http://localhost:5000/add-fav\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ recipe: recipe }),\n        method: \"POST\",\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setIsFav(!isFav);\n          console.log(data);\n        });\n    }\n  };\n\n  const checkFav = (id) => {\n    fetch(`http://localhost:5000/check-fav/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => setIsFav(data));\n  };\n\n  return (\n    <div className=\"main-section\">\n      <Header />\n      <h2>{recipe.title}</h2>\n      {token ? (\n        <NavLink\n          className=\"star\"\n          title={isFav ? \"remove from favorite\" : \"add to favorite\"}\n          onClick={handleAddToFav}\n        >\n          <FontAwesomeIcon icon={faStar} color={isFav ? \"yellow\" : \"gray\"} />\n        </NavLink>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"image-ingredients\">\n        <img src={recipe.image} alt={recipe.title} />\n        <div className=\"nutrition-ingredients\">\n          <div className=\"ingredients\">\n            <h3>Nutrition</h3>\n            <div>\n              <li className=\"nutrition-list\">\n                <span>calories: </span>\n                <span>{ingDetails.calories}</span>\n              </li>\n              <li className=\"nutrition-list\">\n                <span>carbs: </span>\n                <span>{ingDetails.carbs}</span>\n              </li>\n              <li className=\"nutrition-list\">\n                <span>fat: </span>\n                <span>{ingDetails.fat}</span>\n              </li>\n              <li className=\"nutrition-list\">\n                <span>protein: </span>\n                <span>{ingDetails.protein}</span>\n              </li>\n            </div>\n          </div>\n          <div className=\"ingredients\">\n            <h3>Ingredients</h3>\n            <div>\n              {ingredient.map((res) => (\n                <li key={res.id} className=\"ingredients-list\">\n                  <span>{res.name} </span>\n                  <span> {res.amount} </span>\n                  <span>{res.unit}</span>\n                </li>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h3>Instructions</h3>\n        <p>{recipe.instructions}</p>\n      </div>\n    </div>\n  );\n};\nexport default OneRecipe;\n"]},"metadata":{},"sourceType":"module"}