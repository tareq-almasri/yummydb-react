{"ast":null,"code":"var _jsxFileName = \"/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/TokenContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nexport const TokenContext = createContext();\nexport const TokenProvider = props => {\n  const [token, setToken] = useState(() => {\n    const localData = localStorage.getItem('token');\n    return localData ? localData : null;\n  });\n  useEffect(() => {\n    if (token) return localStorage.setItem('token', token);\n  }, [token]);\n  return React.createElement(TokenContext.Provider, {\n    value: [token, setToken],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/TokenContext.js"],"names":["React","createContext","useState","useEffect","TokenContext","TokenProvider","props","token","setToken","localData","localStorage","getItem","setItem","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,YAAY,GAAGH,aAAa,EAAlC;AAEP,OAAO,MAAMI,aAAa,GAAGC,KAAK,IAAI;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAK;AACpC,UAAMO,SAAS,GAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhB;AACD,WAAOF,SAAS,GAACA,SAAD,GAAY,IAA5B;AAAiC,GAFF,CAAlC;AAIAN,EAAAA,SAAS,CAAC,MAAI;AACX,QAAGI,KAAH,EAAU,OAAOG,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA6BL,KAA7B,CAAP;AACZ,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACO,QADT,CADF;AAKD,CAdM","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const TokenContext = createContext();\n\nexport const TokenProvider = props => {\n  const [token, setToken] = useState(()=> {\n      const localData=localStorage.getItem('token');\n     return localData?localData: null});\n\n  useEffect(()=>{\n     if(token) return localStorage.setItem('token',token);\n  },[token])\n\n  return (\n    <TokenContext.Provider value={[token, setToken]}>\n      {props.children}\n    </TokenContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}