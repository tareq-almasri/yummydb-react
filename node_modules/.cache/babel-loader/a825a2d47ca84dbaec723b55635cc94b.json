{"ast":null,"code":"var _jsxFileName = \"/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/Search.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Search.css\";\nimport { Animated } from \"react-animated-css\";\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Card, CardImg, CardBody, CardTitle, Button } from \"reactstrap\";\nimport { ApiContext } from \"./ApiContext\";\nimport Header from \"./Header\";\n\nconst Search = () => {\n  const [recipies, setRecipies] = useState([]);\n  const [query, setQuery] = useContext(ApiContext);\n  const [cuisine, setCuisine] = useState(\"\");\n  const [diet, setDiet] = useState(\"\");\n  const [intolerance, setIntolerance] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [recipeNumber, setRecipeNumber] = useState(10);\n  useEffect(() => {\n    fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?cuisine=${cuisine}&diet=${diet}&intolerances=${intolerance}&number=${recipeNumber}&type=${type}&offset=0&query=${query}`, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"57c6580995msh16a1bdca19a22f4p19d9c9jsn96e04208e387\"\n      }\n    }).then(res => res.json()).then(res => setRecipies(res.results)).catch(err => {\n      console.log(err);\n    });\n  }, [cuisine, diet, intolerance, type, query, recipeNumber]);\n  const cuisineArray = [\"African\", \"Chinese\", \"Japanese\", \"Korean\", \"Vietnamese\", \"Thai\", \"Indian\", \"British\", \"Irish\", \"French\", \"Italian\", \"Mexican\", \"Spanish\", \"Middle Eastern\", \"Jewish\", \"American\", \"Cajun\", \"Southern\", \"Greek\", \"German\", \"Nordic\", \"Eastern European\", \"Caribbean\", \"Latin American\"];\n  const dietArray = [\"Pescetarian\", \"Lacto Vegetarian\", \"Ovo Vegetarian\", \"Vegan\", \"Paleo\", \"Primal\", \"Vegetarian\"];\n  const intoleranceArray = [\"Dairy\", \"Egg\", \"Gluten\", \"Peanut\", \"Sesame\", \"Seafood\", \"Shellfish\", \"Soy\", \"Sulfite\", \"Tree Nut\", \"Wheat\"];\n  const typeArray = [\"Main Course\", \"Side Dish\", \"Dessert\", \"Appetizer\", \"Salad\", \"Bread\", \"Breakfast\", \"Soup\", \"Beverage\", \"Sauce\", \"Drink\"];\n  const [dropdownOpen, setOpen] = useState({\n    cuisine: false,\n    diet: false,\n    intolerance: false,\n    type: false\n  });\n  const [selection, setSelection] = useState({\n    cuisine: \"Any\",\n    diet: \"Any\",\n    intolerance: \"Any\",\n    type: \"Any\"\n  });\n\n  const toggle = item => {\n    const newState = { ...dropdownOpen\n    };\n    newState[item] = !newState[item];\n    setOpen(newState);\n  };\n\n  const changeSelection = (item, e) => {\n    const newState = { ...selection\n    };\n    newState[item] = e.target.innerText;\n    setSelection(newState);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Recipe Name\"), React.createElement(\"div\", {\n    className: \"drop-down-menu\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cuisine-dropdown \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"cuisineTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Cuisine \"), React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen.cuisine,\n    toggle: () => toggle(\"cuisine\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, selection.cuisine), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, cuisineArray.map(oneCuisine => React.createElement(DropdownItem, {\n    key: oneCuisine,\n    onClick: e => {\n      changeSelection(\"cuisine\", e);\n      setCuisine(oneCuisine);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, oneCuisine))))), React.createElement(\"div\", {\n    className: \"diet-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"cuisineTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Diet \"), React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen.diet,\n    toggle: () => toggle(\"diet\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, selection.diet), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, dietArray.map(oneDiet => React.createElement(DropdownItem, {\n    key: oneDiet,\n    onClick: e => {\n      changeSelection(\"diet\", e);\n      setDiet(oneDiet);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, oneDiet))))), React.createElement(\"div\", {\n    className: \"intolerance-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"cuisineTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Intolerance \"), React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen.intolerance,\n    toggle: () => toggle(\"intolerance\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, selection.intolerance), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, intoleranceArray.map(oneIntol => React.createElement(DropdownItem, {\n    key: oneIntol,\n    onClick: e => {\n      changeSelection(\"intolerance\", e);\n      setIntolerance(oneIntol);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, oneIntol))))), React.createElement(\"div\", {\n    className: \"type-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"cuisineTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Type\"), React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen.type,\n    toggle: () => toggle(\"type\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, selection.type), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, typeArray.map(oneType => React.createElement(DropdownItem, {\n    key: oneType,\n    onClick: e => {\n      changeSelection(\"type\", e);\n      setType(oneType);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, oneType)))))), React.createElement(\"div\", {\n    className: \"recipies-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, recipies.map(res => React.createElement(Animated, {\n    key: res.id,\n    animationIn: \"fadeIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    className: \"card-image\",\n    top: true,\n    width: \"100px\",\n    src: `https://spoonacular.com/recipeImages/${res.image}`,\n    alt: res.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, res.title), React.createElement(Link, {\n    to: `recipe/${res.id}`,\n    className: \"btn-flip\",\n    \"data-back\": \"Click me\",\n    \"data-front\": \"Details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  })))))), React.createElement(Button, {\n    className: \"load-more animated infinite bounce delay-2s\",\n    onClick: () => setRecipeNumber(recipeNumber + 10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"More\"));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/Search.js"],"names":["React","useState","useEffect","useContext","Link","Animated","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Card","CardImg","CardBody","CardTitle","Button","ApiContext","Header","Search","recipies","setRecipies","query","setQuery","cuisine","setCuisine","diet","setDiet","intolerance","setIntolerance","type","setType","recipeNumber","setRecipeNumber","fetch","method","headers","then","res","json","results","catch","err","console","log","cuisineArray","dietArray","intoleranceArray","typeArray","dropdownOpen","setOpen","selection","setSelection","toggle","item","newState","changeSelection","e","target","innerText","display","alignItems","justifyContent","map","oneCuisine","oneDiet","oneIntol","oneType","id","image","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Search.css\";\nimport {Animated} from \"react-animated-css\";\n\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  Button\n} from \"reactstrap\";\nimport { ApiContext } from \"./ApiContext\";\nimport Header from \"./Header\";\n\nconst Search = () => {\n  const [recipies, setRecipies] = useState([]);\n  const [query, setQuery] = useContext(ApiContext);\n  const [cuisine, setCuisine] = useState(\"\");\n  const [diet, setDiet] = useState(\"\");\n  const [intolerance, setIntolerance] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [recipeNumber, setRecipeNumber] = useState(10);\n\n  useEffect(() => {\n    fetch(\n      `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?cuisine=${cuisine}&diet=${diet}&intolerances=${intolerance}&number=${recipeNumber}&type=${type}&offset=0&query=${query}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\":\n            \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"57c6580995msh16a1bdca19a22f4p19d9c9jsn96e04208e387\"\n        }\n      }\n    )\n      .then(res => res.json())\n      .then(res => setRecipies(res.results))\n      .catch(err => {\n        console.log(err);\n      });\n  }, [cuisine, diet, intolerance, type, query, recipeNumber]);\n\n  const cuisineArray = [\n    \"African\",\n    \"Chinese\",\n    \"Japanese\",\n    \"Korean\",\n    \"Vietnamese\",\n    \"Thai\",\n    \"Indian\",\n    \"British\",\n    \"Irish\",\n    \"French\",\n    \"Italian\",\n    \"Mexican\",\n    \"Spanish\",\n    \"Middle Eastern\",\n    \"Jewish\",\n    \"American\",\n    \"Cajun\",\n    \"Southern\",\n    \"Greek\",\n    \"German\",\n    \"Nordic\",\n    \"Eastern European\",\n    \"Caribbean\",\n    \"Latin American\"\n  ];\n\n  const dietArray = [\n    \"Pescetarian\",\n    \"Lacto Vegetarian\",\n    \"Ovo Vegetarian\",\n    \"Vegan\",\n    \"Paleo\",\n    \"Primal\",\n    \"Vegetarian\"\n  ];\n  const intoleranceArray = [\n    \"Dairy\",\n    \"Egg\",\n    \"Gluten\",\n    \"Peanut\",\n    \"Sesame\",\n    \"Seafood\",\n    \"Shellfish\",\n    \"Soy\",\n    \"Sulfite\",\n    \"Tree Nut\",\n    \"Wheat\"\n  ];\n  const typeArray = [\n    \"Main Course\",\n    \"Side Dish\",\n    \"Dessert\",\n    \"Appetizer\",\n    \"Salad\",\n    \"Bread\",\n    \"Breakfast\",\n    \"Soup\",\n    \"Beverage\",\n    \"Sauce\",\n    \"Drink\"\n  ];\n\n  const [dropdownOpen, setOpen] = useState({\n    cuisine: false,\n    diet: false,\n    intolerance: false,\n    type: false\n  });\n\n  const [selection, setSelection] = useState({\n    cuisine: \"Any\",\n    diet: \"Any\",\n    intolerance: \"Any\",\n    type: \"Any\"\n  });\n\n  const toggle = item => {\n    const newState = { ...dropdownOpen };\n    newState[item] = !newState[item];\n    setOpen(newState);\n  };\n\n  const changeSelection = (item, e) => {\n    const newState = { ...selection };\n    newState[item] = e.target.innerText;\n    setSelection(newState);\n  };\n\n  return (\n    \n    <div className=\"main-section\">\n    <Header/>\n    <h1>Recipe Name</h1>\n\n      <div className=\"drop-down-menu\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        }}\n      >\n        <div className=\"cuisine-dropdown \">\n          <label className=\"cuisineTitle\">Cuisine </label>\n          <ButtonDropdown\n            isOpen={dropdownOpen.cuisine}\n            toggle={() => toggle(\"cuisine\")}\n          >\n            <DropdownToggle caret>{selection.cuisine}</DropdownToggle>\n            <DropdownMenu>\n              {cuisineArray.map(oneCuisine => (\n                <DropdownItem\n                  key={oneCuisine}\n                  onClick={e => {\n                    changeSelection(\"cuisine\", e);\n                    setCuisine(oneCuisine);\n                  }}\n                >\n                  {oneCuisine}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n        <div className=\"diet-dropdown\">\n          <label className=\"cuisineTitle\">Diet </label>\n          <ButtonDropdown\n            isOpen={dropdownOpen.diet}\n            toggle={() => toggle(\"diet\")}\n          >\n            <DropdownToggle caret>{selection.diet}</DropdownToggle>\n            <DropdownMenu>\n              {dietArray.map(oneDiet => (\n                <DropdownItem\n                  key={oneDiet}\n                  onClick={e => {\n                    changeSelection(\"diet\", e);\n                    setDiet(oneDiet);\n                  }}\n                >\n                  {oneDiet}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n        <div className=\"intolerance-dropdown\">\n          <label className=\"cuisineTitle\">Intolerance </label>\n          <ButtonDropdown\n            isOpen={dropdownOpen.intolerance}\n            toggle={() => toggle(\"intolerance\")}\n          >\n            <DropdownToggle caret>{selection.intolerance}</DropdownToggle>\n            <DropdownMenu>\n              {intoleranceArray.map(oneIntol => (\n                <DropdownItem\n                  key={oneIntol}\n                  onClick={e => {\n                    changeSelection(\"intolerance\", e);\n                    setIntolerance(oneIntol);\n                  }}\n                >\n                  {oneIntol}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n        <div className=\"type-dropdown\">\n          <label className=\"cuisineTitle\">Type</label>\n          <ButtonDropdown\n            isOpen={dropdownOpen.type}\n            toggle={() => toggle(\"type\")}\n          >\n            <DropdownToggle caret>{selection.type}</DropdownToggle>\n            <DropdownMenu>\n              {typeArray.map(oneType => (\n                <DropdownItem\n                  key={oneType}\n                  onClick={e => {\n                    changeSelection(\"type\", e);\n                    setType(oneType);\n                  }}\n                >\n                  {oneType}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n      </div>\n      <div className=\"recipies-section\">\n        {recipies.map(res => (\n          <Animated key={res.id} animationIn=\"fadeIn\"><Card\n            className=\"card\"\n            \n          >\n            <CardImg\n             className=\"card-image\"\n              top\n              width=\"100px\"\n              src={`https://spoonacular.com/recipeImages/${res.image}`}\n              alt={res.title}\n            />\n            <CardBody>\n              <CardTitle>{res.title}</CardTitle>\n              <Link to={`recipe/${res.id}`} className=\"btn-flip\" data-back=\"Click me\" data-front=\"Details\"/>\n            </CardBody>\n          </Card></Animated>\n        ))}\n      </div>\n      <Button className=\"load-more animated infinite bounce delay-2s\" onClick={()=>setRecipeNumber(recipeNumber + 10)}>More</Button>\n    </div>\n  );\n};\n\nexport default Search;\n\n\n"]},"metadata":{},"sourceType":"module"}