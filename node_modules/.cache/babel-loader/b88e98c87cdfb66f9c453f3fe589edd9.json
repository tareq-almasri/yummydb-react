{"ast":null,"code":"var _jsxFileName = \"/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/Profile.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { TokenContext } from \"./TokenContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // import {\n// } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Profile() {\n  const [info, setInfo] = useState({\n    name: \"\",\n    TDEE: \"\",\n    goal: \"\",\n    protein: \"\",\n    carbs: \"\",\n    fat: \"\",\n    sugar: \"\"\n  });\n  const [token, setToken] = useContext(TokenContext);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/profile\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => setInfo({\n      name: data.username,\n      TDEE: data.tdee,\n      goal: data.goalCal,\n      protein: data.protein,\n      carbs: data.carbs,\n      fat: data.fat,\n      sugar: data.sugar\n    }));\n  }, [token]);\n  return React.createElement(\"div\", {\n    style: {\n      // textShadow: '1px 1px #fff',\n      backgroundColor: \"#f8b652\",\n      color: \"#000\",\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-evenly\",\n      padding: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      justifySelf: \"flex-start\",\n      width: \"300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Hey \", info.name, \",\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \" Here's your daily need of calories and nutrition. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \" have a healthy and wonderful day \", \":)\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-evenly\",\n      width: \"600px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Total Daily Energy Expenditure\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"TDEE:\")), \" \", React.createElement(\"span\", {\n    style: {\n      color: \"#F94F72\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, info.TDEE), \" kcal\", React.createElement(\"p\", {\n    style: {\n      color: \"#3d3b3b\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"(your daily calories to maintain your current weight)\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Goal Calories:\"), React.createElement(\"span\", {\n    style: {\n      color: \"#F94F72\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, info.goal), \" kcal\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Protein:\"), React.createElement(\"span\", {\n    style: {\n      color: \"#F94F72\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, info.protein), \" g\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Carbs:\"), React.createElement(\"span\", {\n    style: {\n      color: \"#F94F72\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, info.carbs), \" g\", \" \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Fat: \", React.createElement(\"span\", {\n    style: {\n      color: \"#F94F72\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, info.fat), \" g\", \" \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Sugar: \", React.createElement(\"span\", {\n    style: {\n      color: \"#F94F72\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, info.sugar), \" g\", \" \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Caffein: \", React.createElement(\"span\", {\n    style: {\n      color: \"#F94F72\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"400-500\"), \" mg\")));\n}","map":{"version":3,"sources":["/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/Profile.js"],"names":["React","useEffect","useState","useContext","TokenContext","FontAwesomeIcon","Profile","info","setInfo","name","TDEE","goal","protein","carbs","fat","sugar","token","setToken","fetch","headers","Authorization","then","res","json","data","username","tdee","goalCal","backgroundColor","color","width","display","flexWrap","justifyContent","padding","justifySelf","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { TokenContext } from \"./TokenContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import {\n  \n// } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Profile() {\n  const [info, setInfo] = useState({\n    name: \"\",\n    TDEE: \"\",\n    goal: \"\",\n    protein: \"\",\n    carbs: \"\",\n    fat: \"\",\n    sugar: \"\",\n  });\n  const [token, setToken] = useContext(TokenContext);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/profile\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) =>\n        setInfo({\n          name: data.username,\n          TDEE: data.tdee,\n          goal: data.goalCal,\n          protein: data.protein,\n          carbs: data.carbs,\n          fat: data.fat,\n          sugar: data.sugar,\n        })\n      );\n  }, [token]);\n\n  return (\n    <div\n      style={{\n        // textShadow: '1px 1px #fff',\n        backgroundColor: \"#f8b652\",\n        color: \"#000\",\n        width: \"100%\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\",\n        padding: \"10px\",\n      }}\n    >\n      <div style={{ justifySelf: \"flex-start\", width: \"300px\" }}>\n        Hey {info.name},\n        <br /> Here's your daily need of calories and nutrition. <br /> have a\n        healthy and wonderful day {\":)\"}\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n          width: \"600px\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <span title=\"Total Daily Energy Expenditure\">\n            <b>TDEE:</b>\n          </span>{\" \"}\n          <span style={{ color: \"#F94F72\" }}>{info.TDEE}</span> kcal\n          <p style={{ color: \"#3d3b3b\" }}>\n            (your daily calories to maintain your current weight)\n          </p>\n        </div>\n        <div>\n          <b>Goal Calories:</b>\n          <span style={{ color: \"#F94F72\" }}>{info.goal}</span> kcal\n        </div>\n        <div>\n          <b>Protein:</b>\n          <span style={{ color: \"#F94F72\" }}>{info.protein}</span> g\n        </div>\n        <div>\n          <b>Carbs:</b>\n          <span style={{ color: \"#F94F72\" }}>{info.carbs}</span> g{\" \"}\n        </div>\n        <div>\n          Fat: <span style={{ color: \"#F94F72\" }}>{info.fat}</span> g{\" \"}\n        </div>\n        <div>\n          Sugar: <span style={{ color: \"#F94F72\" }}>{info.sugar}</span> g{\" \"}\n        </div>\n        <div>\n          Caffein: <span style={{ color: \"#F94F72\" }}>400-500</span> mg\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}