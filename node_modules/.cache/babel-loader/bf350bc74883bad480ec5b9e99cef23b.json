{"ast":null,"code":"var _jsxFileName = \"/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/Profile.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { TokenContext } from './TokenContext';\nexport default function Profile() {\n  // const [TDEE, setTDEE]=useState('');\n  // const [goal, setGoal]=useState('');\n  // const [protein, setProtein]=useState('');\n  // const [fat, setFat]=useState('');\n  // const [carbs, setCarbs]=useState('');\n  // const [sugar, setSugar]=useState('');\n  // const [name, setName]=useState('');\n  const [info, setInfo] = useState({\n    name: '',\n    TDEE: '',\n    goal: '',\n    protein: '',\n    carbs: '',\n    fat: '',\n    sugar: ''\n  });\n  const [token, setToken] = useContext(TokenContext);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/profile\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => setInfo({\n      name: data.username,\n      TDEE: data.tdee,\n      goal: data.goalCal,\n      protein: data.protein,\n      carbs: data.carbs,\n      fat: data.fat,\n      sugar: data.sugar\n    }));\n  }, [token]);\n  return React.createElement(\"div\", {\n    style: {\n      // textShadow: '1px 1px #fff',\n      backgroundColor: \"#7dbf37\",\n      color: '#000',\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-evenly\",\n      padding: \"4px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      justifySelf: \"flex-start\",\n      width: \"300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Hello \", info.name, React.createElement(\"img\", {\n    src: \"../assets/wave.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" Here's your daily need of calories and nutrition. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \" have a healthy and wonderful day \", \":)\"), React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    title: \"Total Daily Energy Expenditure\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"TDEE: \", info.TDEE, \" kcal\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"(your daily calories to maintain your current weight)\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Goal Calories: \", info.goal, \" kcal\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Protein: \", info.protein, \" g\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Carbs: \", info.carbs, \" g \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Fat: \", info.fat, \" g \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Sugar: \", info.sugar, \" g \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Caffein: 400-500 mg\"));\n}","map":{"version":3,"sources":["/home/dci/lord-of-scripts/final-project/food-nutrition/src/components/Profile.js"],"names":["React","useEffect","useState","useContext","TokenContext","Profile","info","setInfo","name","TDEE","goal","protein","carbs","fat","sugar","token","setToken","fetch","headers","Authorization","then","res","json","data","username","tdee","goalCal","backgroundColor","color","width","display","flexWrap","justifyContent","padding","justifySelf","textAlign"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport { TokenContext } from './TokenContext'\n\nexport default function Profile() {\n    // const [TDEE, setTDEE]=useState('');\n    // const [goal, setGoal]=useState('');\n    // const [protein, setProtein]=useState('');\n    // const [fat, setFat]=useState('');\n    // const [carbs, setCarbs]=useState('');\n    // const [sugar, setSugar]=useState('');\n    // const [name, setName]=useState('');\n    const [info, setInfo] = useState({\n      name: '',\n      TDEE: '',\n      goal: '',\n      protein: '',\n      carbs: '',\n      fat: '',\n      sugar: '',\n    });\n    const [token, setToken] = useContext(TokenContext);\n    useEffect(()=>{\n        fetch(\"http://localhost:5000/profile\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        })\n          .then(res => res.json())\n          .then(data => setInfo({name: data.username,\n          TDEE: data.tdee,\n        goal: data.goalCal,\n      protein: data.protein,\n    carbs: data.carbs,\n  fat: data.fat,\nsugar: data.sugar}));\n    },[token])\n    \n    return (\n      <div\n        style={{\n          // textShadow: '1px 1px #fff',\n          backgroundColor: \"#7dbf37\",\n          color: '#000',\n          width: \"100%\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n          padding: \"4px\",\n        }}\n      >\n        <div style={{ justifySelf: \"flex-start\", width: \"300px\" }}>\n          Hello {info.name}<img src='../assets/wave.png'/> <br /> Here's your daily need of calories and\n          nutrition. <br /> have a healthy and wonderful day {\":)\"}\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <span title=\"Total Daily Energy Expenditure\">\n            TDEE: {info.TDEE} kcal\n          </span>\n          <p>(your daily calories to maintain your current weight)</p>\n        </div>\n        <div>Goal Calories: {info.goal} kcal</div>\n        <div>Protein: {info.protein} g</div>\n        <div>Carbs: {info.carbs} g </div>\n        <div>Fat: {info.fat} g </div>\n        <div>Sugar: {info.sugar} g </div>\n        <div>Caffein: 400-500 mg</div>\n      </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}